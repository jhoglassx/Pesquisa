// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pesquisa.Models;

namespace Pesquisa.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210815195542_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pesquisa.Models.ConvenioList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConvenioNome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConvenioNome");

                    b.HasKey("Id");

                    b.ToTable("ConvenioList");
                });

            modelBuilder.Entity("Pesquisa.Models.Enquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConvenioListId")
                        .HasColumnType("int")
                        .HasColumnName("ConvenioListId");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("FaixaIdadeId")
                        .HasColumnType("int")
                        .HasColumnName("FaixaIdadeId");

                    b.Property<int>("FaixaSalarioId")
                        .HasColumnType("int")
                        .HasColumnName("FaixaSalarioId");

                    b.Property<int>("MotivoEmprestimoId")
                        .HasColumnType("int")
                        .HasColumnName("MotivoEmprestimoId");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioListId");

                    b.HasIndex("FaixaIdadeId");

                    b.HasIndex("FaixaSalarioId");

                    b.HasIndex("MotivoEmprestimoId");

                    b.ToTable("Enquete");
                });

            modelBuilder.Entity("Pesquisa.Models.FaixaIdade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FaixadeIdade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FaixaIdade");

                    b.HasKey("Id");

                    b.ToTable("FaixaIdade");
                });

            modelBuilder.Entity("Pesquisa.Models.FaixaSalario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FaixaSalarial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FaixaSalarial");

                    b.HasKey("Id");

                    b.ToTable("FaixaSalario");
                });

            modelBuilder.Entity("Pesquisa.Models.MotivoEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmprestimoMotivo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmprestimoMotivo");

                    b.HasKey("Id");

                    b.ToTable("MotivoEmprestimo");
                });

            modelBuilder.Entity("Pesquisa.Models.Enquete", b =>
                {
                    b.HasOne("Pesquisa.Models.ConvenioList", "ConvenioList")
                        .WithMany()
                        .HasForeignKey("ConvenioListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pesquisa.Models.FaixaIdade", "FaixaIdades")
                        .WithMany()
                        .HasForeignKey("FaixaIdadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pesquisa.Models.FaixaSalario", "FaixaSalario")
                        .WithMany()
                        .HasForeignKey("FaixaSalarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pesquisa.Models.MotivoEmprestimo", "MotivoEmprestimos")
                        .WithMany()
                        .HasForeignKey("MotivoEmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConvenioList");

                    b.Navigation("FaixaIdades");

                    b.Navigation("FaixaSalario");

                    b.Navigation("MotivoEmprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
